
# input vars:
#   branch -- a name of a git branch this pipeline is running on
#   commit -- a commit a PR is related to
#   github-access-token -- a token for PR status updates
#   pull_request_branch_name -- if defined then it is a name of a source branch, that PR is related to
#   python_version -- a version of CPython that is used within the code

# TODO: replace docker image with more suitable one
# TODO: simplify github routine
# TODO: hide shell-code in a dedicated file in git?

resource_types:
  - name: build-metadata
    type: docker-image
    source:
      repository: mastertinner/build-metadata-resource

resources:

  - name: code
    type: git
    icon: github
    source:
      uri: https://github.com/a1ezzz/pyknic
      branch: ((branch))

  - name: pr-code
    type: git
    icon: github
    source:
      uri: https://github.com/a1ezzz/pyknic
      branch: ((pull_request_branch_name))

  - name: metadata
    type: build-metadata

jobs:
  - name: pyknic-test-job-py-((python_version))
    build_log_retention:
      builds: 15
    plan:

      - get: code
        trigger: true

      - get: pr-code
        trigger: true

      - get: metadata

      - load_var: metadata_build_id
        file: metadata/build-id
        format: trim

      - task: optional_code_merging
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: python
              tag: ((python_version))
          inputs:
            - name: code
            - name: metadata
          outputs:
            - name: code
          run:
            dir: code
            path: /bin/bash
            args:
              - -ecx
              - |
                if [[ -n "((pull_request_branch_name))" ]]; then

                    git config user.email "john-doe@concourse-ci"
                    git config user.name "John Doe-Concourse"

                    git fetch origin '((pull_request_branch_name)):((pull_request_branch_name))'
                    git merge '((pull_request_branch_name))' --no-commit
                fi

      - task: prepare_venv
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: python
              tag: ((python_version))
          outputs:
            - name: sandbox
              path: /sandbox
          caches:
            - path: sandbox/pip-cache
          run:
            path: /bin/bash
            args:
              - -ecx
              - |
                mkdir -p /sandbox/pip-cache
                pip3 --cache-dir /sandbox/pip-cache install virtualenv  # TODO: it is better to do this inside base container
                virtualenv -p /usr/local/bin/python /sandbox/venv

      - task: install_dependencies
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: python
              tag: ((python_version))
          inputs:
            - name: sandbox
              path: /sandbox
            - name: code
          outputs:
            - name: sandbox
              path: /sandbox
          caches:
            - path: /sandbox/pip-cache
          run:
            dir: code
            path: /bin/bash
            args:
              - -ecx
              - |
                source /sandbox/venv/bin/activate
                /sandbox/venv/bin/pip3 --cache-dir /sandbox/pip-cache install '.[all]'

      - task: run_tests
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: python
              tag: ((python_version))
          inputs:
            - name: sandbox
              path: /sandbox
            - name: code
          run:
            dir: code
            path: /bin/bash
            args:
              - -ecx
              - |
                source /sandbox/venv/bin/activate
                pytest -v
        on_failure:
          task: set_pytest_status_as_failed
          config:
            platform: linux
            image_resource:
              type: registry-image
              source:
                repository: python
                tag: ((python_version))
            run:
              path: /bin/bash
              args:
                - -ecx
                - |
                  if [[ -n "((pull_request_branch_name))" ]]; then
                      curl \
                          -L \
                          -X POST \
                          -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer ((github-access-token))" \
                          -H "X-GitHub-Api-Version: 2022-11-28" \
                          "https://api.github.com/repos/a1ezzz/pyknic/statuses/((commit))" \
                          -d '{"state":"failure","target_url":"https://concourse-ci.binblob.com/builds/((.:metadata_build_id))","context":"concourse-ci/py-((python_version))-pytest"}'
                  fi

      - task: set_pytest_status_as_succeeded
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: python
              tag: ((python_version))
          run:
            path: /bin/bash
            args:
              - -ecx
              - |
                if [[ -n "((pull_request_branch_name))" ]]; then
                    curl \
                        -L \
                        -X POST \
                        -H "Accept: application/vnd.github+json" \
                        -H "Authorization: Bearer ((github-access-token))" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        "https://api.github.com/repos/a1ezzz/pyknic/statuses/((commit))" \
                        -d '{"state":"success","target_url":"https://concourse-ci.binblob.com/builds/((.:metadata_build_id))","context":"concourse-ci/py-((python_version))-pytest"}'
                fi

      - task: run_mypy
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: python
              tag: ((python_version))
          inputs:
            - name: sandbox
              path: /sandbox
            - name: code
          run:
            dir: code
            path: /bin/bash
            args:
              - -ecx
              - |
                source /sandbox/venv/bin/activate
                mypy --install-types --non-interactive
                mypy
        on_failure:
          task: set_mypy_status_as_failed
          config:
            platform: linux
            image_resource:
              type: registry-image
              source:
                repository: python
                tag: ((python_version))
            run:
              path: /bin/bash
              args:
                - -ecx
                - |
                  if [[ -n "((pull_request_branch_name))" ]]; then
                      curl \
                          -L \
                          -X POST \
                          -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer ((github-access-token))" \
                          -H "X-GitHub-Api-Version: 2022-11-28" \
                          "https://api.github.com/repos/a1ezzz/pyknic/statuses/((commit))" \
                          -d '{"state":"failure","target_url":"https://concourse-ci.binblob.com/builds/((.:metadata_build_id))","context":"concourse-ci/py-((python_version))-mypy"}'
                  fi

      - task: set_mypy_status_as_succeeded
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: python
              tag: ((python_version))
          run:
            path: /bin/bash
            args:
              - -ecx
              - |
                if [[ -n "((pull_request_branch_name))" ]]; then
                    curl \
                        -L \
                        -X POST \
                        -H "Accept: application/vnd.github+json" \
                        -H "Authorization: Bearer ((github-access-token))" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        "https://api.github.com/repos/a1ezzz/pyknic/statuses/((commit))" \
                        -d '{"state":"success","target_url":"https://concourse-ci.binblob.com/builds/((.:metadata_build_id))","context":"concourse-ci/py-((python_version))-mypy"}'
                fi
